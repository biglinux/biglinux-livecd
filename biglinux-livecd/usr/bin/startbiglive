#!/bin/bash

# Identify the display manager
for dm in sddm gdm lightdm; do
    if systemctl status $dm &> /dev/null; then
        display_manager=$dm
        break
    fi
done
display_manager=${display_manager:-"unknown"}

# Check the session type and move to the appropriate directory
if [ "$XDG_SESSION_TYPE" = "x11" ]; then
    # Rename the Wayland session
    sudo mv /usr/share/wayland-sessions /usr/share/wayland-sessions.bak

    monitors=$(xrandr | grep -w connected | awk '{print $1}')

    # Get the recommended resolution of the first monitor
    first_monitor=$(echo $monitors | awk '{print $1}')
    resolution_first_monitor=$(xrandr | grep "$first_monitor connected" -A1 | tail -n1 | awk '{print $1}')

    # Create a string to store the xrandr configuration
    xrandr_configuration=""

    # Loop through monitors (excluding the first one) to build the xrandr configuration
    for monitor in $monitors; do
        if [ "$monitor" != "$first_monitor" ]; then
            xrandr_configuration="$xrandr_configuration --output $monitor --same-as $first_monitor --mode $resolution_first_monitor"
        fi
    done

    # Apply the xrandr configuration to duplicate the output on all monitors
    xrandr $xrandr_configuration

# elif [ "$XDG_SESSION_TYPE" = "wayland" ]; then
#     # Rename the X11 session
#     sudo mv /usr/share/xsessions /usr/share/xsessions.bak
fi

# Specific settings for SDDM
if [[ $display_manager == "sddm" ]]; then
    if [ "$(grep 'Autolock=false' ~/.config/kscreenlockerrc)" = "" ]; then
        sed -i '/\[Daemon\]/a\'$'\n''Autolock=false\nLockOnResume=false' ~/.config/kscreenlockerrc
    fi

    if [ "$(grep 'Enabled=false' ~/.config/kwalletrc)" = "" ]; then
        echo '[Wallet]
    Enabled=false' >> ~/.config/kwalletrc
    fi
fi

# Verify cmdline biglinux.bootcmd
eval "kernel_args=( $(cat /proc/cmdline) )"
for arg in "${kernel_args[@]}" ; do
    case "$arg" in
        biglinux.bootcmd=*)
            ${arg#biglinux.bootcmd=}
            exit
            ;;
    esac
done

# Manage the biglinux-dual-gpu-manager-after-display-manager service
cd /usr/share/bigbashview/apps/livecd/
if systemctl -q is-enabled biglinux-dual-gpu-manager-after-display-manager; then
    sudo systemctl start biglinux-dual-gpu-manager-after-display-manager 2>&1 &
fi

# Environment settings for QT and run bigbashview
if [ "$XDG_SESSION_TYPE" = "x11" ]; then
        bigbashview -c black -t qt -s $(LANG=C xdpyinfo  | grep 'dimensions:' | sed 's|.*dimensions:||g;s| pixels.*||g') localization.html
else
    QT_QPA_PLATFORM=wayland /usr/bin/bigbashview -w fullscreen -c black -t qt index.html
fi

# Language and theme settings
export LANGUAGE=$(cat /tmp/big_language).UTF-8
export LANG=$(cat /tmp/big_language).UTF-8
export LC_MESSAGES=$(cat /tmp/big_language).UTF-8
echo "$(cat /tmp/big_language)" > $HOME/.config/user-dirs.locale

if [[ $display_manager == "sddm" ]]; then
    echo -e "[Formats]\nLANG=$(cat /tmp/big_language).UTF-8" > $HOME/.config/plasma-localerc
    change-plasma-theme --apply $(cut -f2 -d" " /etc/big_desktop_changed) clean quiet
fi

# Make folders in home
wait
LC_ALL=$(cat /tmp/big_language).UTF-8 xdg-user-dirs-update
. ~/.config/user-dirs.dirs
cp -f "/usr/share/applications/calamares-biglinux.desktop" "$XDG_DESKTOP_DIR/calamares-biglinux.desktop"
chmod +x "$XDG_DESKTOP_DIR/calamares-biglinux.desktop"

# Checks if the display manager is GDM and removes unwanted files.
if [[ $display_manager == "gdm" ]]; then

    # Removes unwanted files
    rm -f "$HOME/Empty Bash" "$HOME/Empty Desktop File.desktop" "$HOME/Empty File"

    # Updates user directories
    xdg-user-dirs-update
fi

if [[ $display_manager = "sddm" ]]; then
    startkde-biglinux
fi

sudo systemctl restart $display_manager
